{"version":3,"sources":["Components/Editor/Editor.tsx"],"names":["Header","require","List","ImageTool","Embed","Quote","Marker","CodeTool","LinkTool","Delimiter","Warning","Table","Checklist","InlineCode","Paragraph","Editor","state","editor","title","editorContent","EditorJS","autofocus","tools","header","list","code","checklist","class","inlineToolbar","inlineCode","shortcut","table","embed","delimiter","quote","config","quotePlaceholder","captionPlaceholder","linkTool","endpoint","paragraph","warning","titlePlaceholder","messagePlaceholder","image","endpoints","byFile","byUrl","this","setState","event","target","value","alert","formData","FormData","append","fetch","method","headers","Accept","body","then","res","status","window","location","href","json","data","console","log","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","className","type","onChange","setTitle","bind","style","padding","fontWeight","fontSize","border","placeholder","id","onClick","publish","React","Component"],"mappings":"+MAEMA,EAASC,EAAQ,IACjBC,EAAOD,EAAQ,IACfE,EAAYF,EAAQ,IACpBG,EAAQH,EAAQ,IAChBI,EAAQJ,EAAQ,IAChBK,EAASL,EAAQ,IACjBM,EAAWN,EAAQ,IACnBO,EAAWP,EAAQ,IACnBQ,EAAYR,EAAQ,IACpBS,EAAUT,EAAQ,IAClBU,EAAQV,EAAQ,IAChBW,EAAYX,EAAQ,IACpBY,EAAaZ,EAAQ,IACrBa,EAAYb,EAAQ,IAOLc,6MACnBC,MAAgB,CACdC,OAAQ,KACRC,MAAO,uFAIP,IAAIC,EAAgB,IAAIC,IAAS,CAC/BC,WAAW,EACXC,MAAO,CACLC,OAAQvB,EACRwB,KAAMtB,EACNuB,KAAMlB,EACNmB,UAAW,CACTC,MAAOf,EACPgB,eAAe,GAEjBC,WAAY,CACVF,MAAOd,EACPiB,SAAU,eAEZC,MAAO,CACLJ,MAAOhB,GAETqB,MAAO5B,EACP6B,UAAWxB,EACXyB,MAAO,CACLP,MAAOtB,EACPuB,eAAe,EACfE,SAAU,cACVK,OAAQ,CACNC,iBAAkB,gBAClBC,mBAAoB,mBAGxB/B,OAAQ,CACNqB,MAAOrB,EACPwB,SAAU,eAEZQ,SAAU,CACRX,MAAOnB,EACP2B,OAAQ,CACNI,SAAU,cAGdC,UAAW,CACTb,MAAOb,EACPc,eAAe,GAEjBa,QAAS,CACPd,MAAOjB,EACPkB,eAAe,EACfE,SAAU,cACVK,OAAQ,CACNO,iBAAkB,eAClBC,mBAAoB,iBAGxBC,MAAO,CACLjB,MAAOxB,EACPgC,OAAQ,CACNU,UAAW,CACTC,OAAQ,cACRC,MAAO,kBAMjBC,KAAKC,SAAS,CACZhC,OAAQE,qCAIH+B,GACPF,KAAKC,SAAS,CACZ/B,MAAOgC,EAAMC,OAAOC,0CAKtB,GAAyB,KAArBJ,KAAKhC,MAAME,MAEb,OADAmC,MAAM,yCACC,EAET,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAASR,KAAKhC,MAAME,OAKpCuC,MAAM,gBAAiB,CACrBC,OAAQ,OACRC,QAAS,CACPC,OAAQ,oBAIVC,KAAMP,IAELQ,KAAK,SAAAC,GAIJ,OAHmB,MAAfA,EAAIC,SACNC,OAAOC,SAASC,KAAO,UAElBJ,EAAIK,SAEZN,KAAK,SAACO,GACLC,QAAQC,IAAIF,GACZhB,MAAM,+DAKV,OACEmB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLC,SAAU9B,KAAK+B,SAASC,KAAKhC,MAC7B4B,UAAU,oCACVK,MAAO,CACLC,QAAS,YACTC,WAAY,OACZC,SAAU,OACVC,OAAQ,GAEVC,YAAY,kBAGhBd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKa,GAAG,cAEVf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,UACEc,QAASxC,KAAKyC,QAAQT,KAAKhC,MAC3B6B,KAAK,SACLD,UAAU,kFAHZ,0BAtIwBc,IAAMC","file":"static/js/11.0335fa4e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport EditorJS from \"@editorjs/editorjs\";\r\nconst Header = require(\"@editorjs/header\");\r\nconst List = require(\"@editorjs/list\");\r\nconst ImageTool = require(\"@editorjs/image\");\r\nconst Embed = require(\"@editorjs/embed\");\r\nconst Quote = require(\"@editorjs/quote\");\r\nconst Marker = require(\"@editorjs/marker\");\r\nconst CodeTool = require(\"@editorjs/code\");\r\nconst LinkTool = require(\"@editorjs/link\");\r\nconst Delimiter = require(\"@editorjs/delimiter\");\r\nconst Warning = require(\"@editorjs/warning\");\r\nconst Table = require(\"@editorjs/table\");\r\nconst Checklist = require(\"@editorjs/checklist\");\r\nconst InlineCode = require(\"@editorjs/inline-code\");\r\nconst Paragraph = require(\"@editorjs/paragraph\");\r\n\r\ninterface IState {\r\n  editor: any;\r\n  title?: any;\r\n}\r\ninterface IProps {}\r\nexport default class Editor extends React.Component<IProps, IState> {\r\n  state: IState = {\r\n    editor: null,\r\n    title: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    let editorContent = new EditorJS({\r\n      autofocus: true,\r\n      tools: {\r\n        header: Header,\r\n        list: List,\r\n        code: CodeTool,\r\n        checklist: {\r\n          class: Checklist,\r\n          inlineToolbar: true\r\n        },\r\n        inlineCode: {\r\n          class: InlineCode,\r\n          shortcut: \"CMD+SHIFT+M\"\r\n        },\r\n        table: {\r\n          class: Table\r\n        },\r\n        embed: Embed,\r\n        delimiter: Delimiter,\r\n        quote: {\r\n          class: Quote,\r\n          inlineToolbar: true,\r\n          shortcut: \"CMD+SHIFT+O\",\r\n          config: {\r\n            quotePlaceholder: \"Enter a quote\",\r\n            captionPlaceholder: \"Quote's author\"\r\n          }\r\n        },\r\n        Marker: {\r\n          class: Marker,\r\n          shortcut: \"CMD+SHIFT+M\"\r\n        },\r\n        linkTool: {\r\n          class: LinkTool,\r\n          config: {\r\n            endpoint: \"/fetchUrl\" // Your backend endpoint for url data fetching\r\n          }\r\n        },\r\n        paragraph: {\r\n          class: Paragraph,\r\n          inlineToolbar: true\r\n        },\r\n        warning: {\r\n          class: Warning,\r\n          inlineToolbar: true,\r\n          shortcut: \"CMD+SHIFT+W\",\r\n          config: {\r\n            titlePlaceholder: \"标题\",\r\n            messagePlaceholder: \"内容\"\r\n          }\r\n        },\r\n        image: {\r\n          class: ImageTool,\r\n          config: {\r\n            endpoints: {\r\n              byFile: \"/uploadFile\", // Your backend file uploader endpoint\r\n              byUrl: \"/fetchUrl\" // Your endpoint that provides uploading by Url\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      editor: editorContent\r\n    });\r\n  }\r\n\r\n  setTitle(event: any) {\r\n    this.setState({\r\n      title: event.target.value\r\n    });\r\n  }\r\n\r\n  publish() {\r\n    if (this.state.title === \"\") {\r\n      alert(\"标题不能为空\");\r\n      return false;\r\n    }\r\n    let formData = new FormData();\r\n    formData.append(\"title\", this.state.title);\r\n    //formData.append(\"guid\", Math.random());\r\n    //formData.append(\"content\", JSON.stringify(this.state.value));\r\n    //formData.append(\"tags\", JSON.stringify(this.state.tags));\r\n\r\n    fetch(\"/topicArticle\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\"\r\n        // \"X-CSRF-TOKEN\": document.head.querySelector('meta[name=\"csrf-token\"]')\r\n        //   .content\r\n      },\r\n      body: formData\r\n    })\r\n      .then(res => {\r\n        if (res.status === 401) {\r\n          window.location.href = \"/login\";\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data: any) => {\r\n        console.log(data);\r\n        alert(\"发布成功\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card gedf-card\">\r\n          <div className=\"card-header\">\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.setTitle.bind(this)}\r\n              className=\"form-control editor-article-title\"\r\n              style={{\r\n                padding: \"26px 20px\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"21px\",\r\n                border: 0\r\n              }}\r\n              placeholder=\"标题\"\r\n            />\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div id=\"editorjs\" />\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <button\r\n              onClick={this.publish.bind(this)}\r\n              type=\"button\"\r\n              className=\"btn btn-primary mt-5 d-flex justify-content-between align-items-center ml-auto\"\r\n            >\r\n              发布\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}