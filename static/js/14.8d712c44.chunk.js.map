{"version":3,"sources":["Components/Selector/SelectItems.tsx"],"names":["TOP_100_FILMS","title","year","map","m","index","Object","_mnt_c_Users_changwenguang_Desktop_projects_std_page_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","rank","renderFilm","film","_ref","handleClick","modifiers","query","matchesPredicate","text","concat","react__WEBPACK_IMPORTED_MODULE_2__","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_1__","active","disabled","label","toString","key","onClick","highlightText","filterFilm","toLowerCase","indexOf","lastIndex","words","split","filter","word","length","escapeRegExpChars","regexp","RegExp","join","tokens","match","exec","before","slice","push","rest","filmSelectProps","itemPredicate","itemRenderer","items"],"mappings":"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","file":"static/js/14.8d712c44.chunk.js","sourcesContent":["/*\r\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\r\n *\r\n * Licensed under the terms of the LICENSE file distributed with this project.\r\n */\r\n\r\nimport { MenuItem } from \"@blueprintjs/core\";\r\nimport { ItemPredicate, ItemRenderer } from \"@blueprintjs/select\";\r\nimport * as React from \"react\";\r\n\r\nexport interface IFilm {\r\n  /** Title of film. */\r\n  title: string;\r\n  /** Release year. */\r\n  year: number;\r\n  /** IMDb ranking. */\r\n  rank: number;\r\n}\r\n\r\n/** Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top */\r\nexport const TOP_100_FILMS: IFilm[] = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  { title: \"12 Angry Men\", year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: \"Pulp Fiction\", year: 1994 },\r\n  { title: \"The Lord of the Rings: The Return of the King\", year: 2003 },\r\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\r\n  { title: \"Fight Club\", year: 1999 },\r\n  { title: \"The Lord of the Rings: The Fellowship of the Ring\", year: 2001 },\r\n  { title: \"Star Wars: Episode V - The Empire Strikes Back\", year: 1980 },\r\n  { title: \"Forrest Gump\", year: 1994 },\r\n  { title: \"Inception\", year: 2010 },\r\n  { title: \"The Lord of the Rings: The Two Towers\", year: 2002 },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: \"Goodfellas\", year: 1990 },\r\n  { title: \"The Matrix\", year: 1999 },\r\n  { title: \"Seven Samurai\", year: 1954 },\r\n  { title: \"Star Wars: Episode IV - A New Hope\", year: 1977 },\r\n  { title: \"City of God\", year: 2002 },\r\n  { title: \"Se7en\", year: 1995 },\r\n  { title: \"The Silence of the Lambs\", year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: \"Life Is Beautiful\", year: 1997 },\r\n  { title: \"The Usual Suspects\", year: 1995 },\r\n  { title: \"Léon: The Professional\", year: 1994 },\r\n  { title: \"Spirited Away\", year: 2001 },\r\n  { title: \"Saving Private Ryan\", year: 1998 },\r\n  { title: \"Once Upon a Time in the West\", year: 1968 },\r\n  { title: \"American History X\", year: 1998 },\r\n  { title: \"Interstellar\", year: 2014 },\r\n  { title: \"Casablanca\", year: 1942 },\r\n  { title: \"City Lights\", year: 1931 },\r\n  { title: \"Psycho\", year: 1960 },\r\n  { title: \"The Green Mile\", year: 1999 },\r\n  { title: \"The Intouchables\", year: 2011 },\r\n  { title: \"Modern Times\", year: 1936 },\r\n  { title: \"Raiders of the Lost Ark\", year: 1981 },\r\n  { title: \"Rear Window\", year: 1954 },\r\n  { title: \"The Pianist\", year: 2002 },\r\n  { title: \"The Departed\", year: 2006 },\r\n  { title: \"Terminator 2: Judgment Day\", year: 1991 },\r\n  { title: \"Back to the Future\", year: 1985 },\r\n  { title: \"Whiplash\", year: 2014 },\r\n  { title: \"Gladiator\", year: 2000 },\r\n  { title: \"Memento\", year: 2000 },\r\n  { title: \"The Prestige\", year: 2006 },\r\n  { title: \"The Lion King\", year: 1994 },\r\n  { title: \"Apocalypse Now\", year: 1979 },\r\n  { title: \"Alien\", year: 1979 },\r\n  { title: \"Sunset Boulevard\", year: 1950 },\r\n  {\r\n    title:\r\n      \"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",\r\n    year: 1964\r\n  },\r\n  { title: \"The Great Dictator\", year: 1940 },\r\n  { title: \"Cinema Paradiso\", year: 1988 },\r\n  { title: \"The Lives of Others\", year: 2006 },\r\n  { title: \"Grave of the Fireflies\", year: 1988 },\r\n  { title: \"Paths of Glory\", year: 1957 },\r\n  { title: \"Django Unchained\", year: 2012 },\r\n  { title: \"The Shining\", year: 1980 },\r\n  { title: \"WALL·E\", year: 2008 },\r\n  { title: \"American Beauty\", year: 1999 },\r\n  { title: \"The Dark Knight Rises\", year: 2012 },\r\n  { title: \"Princess Mononoke\", year: 1997 },\r\n  { title: \"Aliens\", year: 1986 },\r\n  { title: \"Oldboy\", year: 2003 },\r\n  { title: \"Once Upon a Time in America\", year: 1984 },\r\n  { title: \"Witness for the Prosecution\", year: 1957 },\r\n  { title: \"Das Boot\", year: 1981 },\r\n  { title: \"Citizen Kane\", year: 1941 },\r\n  { title: \"North by Northwest\", year: 1959 },\r\n  { title: \"Vertigo\", year: 1958 },\r\n  { title: \"Star Wars: Episode VI - Return of the Jedi\", year: 1983 },\r\n  { title: \"Reservoir Dogs\", year: 1992 },\r\n  { title: \"Braveheart\", year: 1995 },\r\n  { title: \"M\", year: 1931 },\r\n  { title: \"Requiem for a Dream\", year: 2000 },\r\n  { title: \"Amélie\", year: 2001 },\r\n  { title: \"A Clockwork Orange\", year: 1971 },\r\n  { title: \"Like Stars on Earth\", year: 2007 },\r\n  { title: \"Taxi Driver\", year: 1976 },\r\n  { title: \"Lawrence of Arabia\", year: 1962 },\r\n  { title: \"Double Indemnity\", year: 1944 },\r\n  { title: \"Eternal Sunshine of the Spotless Mind\", year: 2004 },\r\n  { title: \"Amadeus\", year: 1984 },\r\n  { title: \"To Kill a Mockingbird\", year: 1962 },\r\n  { title: \"Toy Story 3\", year: 2010 },\r\n  { title: \"Logan\", year: 2017 },\r\n  { title: \"Full Metal Jacket\", year: 1987 },\r\n  { title: \"Dangal\", year: 2016 },\r\n  { title: \"The Sting\", year: 1973 },\r\n  { title: \"2001: A Space Odyssey\", year: 1968 },\r\n  { title: \"Singin' in the Rain\", year: 1952 },\r\n  { title: \"Toy Story\", year: 1995 },\r\n  { title: \"Bicycle Thieves\", year: 1948 },\r\n  { title: \"The Kid\", year: 1921 },\r\n  { title: \"Inglourious Basterds\", year: 2009 },\r\n  { title: \"Snatch\", year: 2000 },\r\n  { title: \"3 Idiots\", year: 2009 },\r\n  { title: \"Monty Python and the Holy Grail\", year: 1975 }\r\n].map((m, index) => ({ ...m, rank: index + 1 }));\r\n\r\nexport const renderFilm: ItemRenderer<IFilm> = (\r\n  film,\r\n  { handleClick, modifiers, query }\r\n) => {\r\n  if (!modifiers.matchesPredicate) {\r\n    return null;\r\n  }\r\n  const text = `${film.rank}. ${film.title}`;\r\n  return (\r\n    <MenuItem\r\n      active={modifiers.active}\r\n      disabled={modifiers.disabled}\r\n      label={film.year.toString()}\r\n      key={film.rank}\r\n      onClick={handleClick}\r\n      text={highlightText(text, query)}\r\n    />\r\n  );\r\n};\r\n\r\nexport const filterFilm: ItemPredicate<IFilm> = (query, film) => {\r\n  return (\r\n    `${film.rank}. ${film.title.toLowerCase()} ${film.year}`.indexOf(\r\n      query.toLowerCase()\r\n    ) >= 0\r\n  );\r\n};\r\n\r\nfunction highlightText(text: string, query: string) {\r\n  let lastIndex = 0;\r\n  const words = query\r\n    .split(/\\s+/)\r\n    .filter(word => word.length > 0)\r\n    .map(escapeRegExpChars);\r\n  if (words.length === 0) {\r\n    return [text];\r\n  }\r\n  const regexp = new RegExp(words.join(\"|\"), \"gi\");\r\n  const tokens: React.ReactNode[] = [];\r\n  while (true) {\r\n    const match = regexp.exec(text);\r\n    if (!match) {\r\n      break;\r\n    }\r\n    const length = match[0].length;\r\n    const before = text.slice(lastIndex, regexp.lastIndex - length);\r\n    if (before.length > 0) {\r\n      tokens.push(before);\r\n    }\r\n    lastIndex = regexp.lastIndex;\r\n    tokens.push(<strong key={lastIndex}>{match[0]}</strong>);\r\n  }\r\n  const rest = text.slice(lastIndex);\r\n  if (rest.length > 0) {\r\n    tokens.push(rest);\r\n  }\r\n  return tokens;\r\n}\r\n\r\nfunction escapeRegExpChars(text: string) {\r\n  return text;\r\n}\r\n\r\nexport const filmSelectProps = {\r\n  itemPredicate: filterFilm,\r\n  itemRenderer: renderFilm,\r\n  items: TOP_100_FILMS\r\n};\r\n"],"sourceRoot":""}